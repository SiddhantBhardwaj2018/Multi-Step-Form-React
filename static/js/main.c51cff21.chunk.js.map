{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","Confirm","List","primaryText","secondaryText","Success","UserForm","state","step","setState","input","target","value","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c51cff21.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class FormUserDetails extends Component {\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n        const { values , handleChange} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Enter User Details\" />\r\n                    <TextField hintText=\"Enter Your First Name\" floatingLabelText = \"First Name\" onChange = {handleChange('firstName')} defaultValue = {values.firstName} />\r\n                    <br />\r\n                    <TextField hintText=\"Enter Your Last Name\" floatingLabelText = \"Last Name\" onChange = {handleChange('lastName')} defaultValue = {values.lastName} />\r\n                    <br />\r\n                    <TextField hintText=\"Enter Your Email\" floatingLabelText = \"Email ID\" onChange = {handleChange('email')} defaultValue = {values.email} />\r\n                    <br />\r\n                    <RaisedButton label = \"Continue\" primary={true} style = {styles.button} onClick={this.continue} />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles  = {\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default FormUserDetails\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class FormPersonalDetails extends Component {\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const { values , handleChange} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Enter Personal Details\" />\r\n                    <TextField hintText=\"Enter Your Occupation\" floatingLabelText = \"Occupation\" onChange = {handleChange('occupation')} defaultValue = {values.occupation} />\r\n                    <br />\r\n                    <TextField hintText=\"Enter Your City\" floatingLabelText = \"City\" onChange = {handleChange('city')} defaultValue = {values.city} />\r\n                    <br />\r\n                    <TextField hintText=\"Enter Your Bio\" floatingLabelText = \"Bio\" onChange = {handleChange('bio')} defaultValue = {values.bio} />\r\n                    <br />\r\n                    <RaisedButton label = \"Back\" primary={false} style = {styles.button} onClick={this.back} />\r\n                    <RaisedButton label = \"Continue\" primary={true} style = {styles.button} onClick={this.continue} />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles  = {\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default FormPersonalDetails\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport {List, ListItem} from 'material-ui/List'\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class Confirm extends Component {\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        // PROCESS FORM //\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        const { values : {firstName, lastName, email, occupation, city, bio}} = this.props;\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Confirm User Data\" />\r\n                    <List>\r\n                        <ListItem primaryText=\"First Name\" secondaryText={firstName} />\r\n                    </List>\r\n                    <List>\r\n                        <ListItem primaryText=\"Last Name\" secondaryText={lastName} />\r\n                    </List>\r\n                    <List>\r\n                        <ListItem primaryText=\"Email\" secondaryText={email} />\r\n                    </List>\r\n                    <List>\r\n                        <ListItem primaryText=\"Occupation\" secondaryText={occupation} />\r\n                    </List>\r\n                    <List>\r\n                        <ListItem primaryText=\"City\" secondaryText={city} />\r\n                    </List>\r\n                    <List>\r\n                        <ListItem primaryText=\"Bio\" secondaryText={bio} />\r\n                    </List>\r\n                    <br />\r\n                    <RaisedButton label = \"Back\" primary={false} style = {styles.button} onClick={this.back} />\r\n                    <RaisedButton label = \"Confirm & Continue\" primary={true} style = {styles.button} onClick={this.continue} />\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles  = {\r\n    button: {\r\n        margin: 15\r\n    }\r\n}\r\n\r\nexport default Confirm\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport TextField from 'material-ui/TextField';\r\nimport {List, ListItem} from 'material-ui/List'\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nexport class Success extends Component {\r\n\r\n    continue = e => {\r\n        e.preventDefault();\r\n        // PROCESS FORM //\r\n        this.props.nextStep();\r\n    }\r\n\r\n    back = e => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    <AppBar title=\"Success\" />\r\n                        <h1>Thank You For Your Submission ! </h1>\r\n                        <p>You will get an email with further instructions !</p>\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Success;\r\n","import React, { Component } from 'react'\r\nimport FormUserDetails from './FormUserDetails'\r\nimport FormPersonalDetails from './FormPersonalDetails'\r\nimport Confirm from './Confirm';\r\nimport Success from './Success'\r\n\r\nexport class UserForm extends Component {\r\n\r\n    state = {\r\n        step: 1,\r\n        firstName: '',\r\n        lastName: '',\r\n        email:'',\r\n        occupation:'',\r\n        city:'',\r\n        bio:''\r\n    }\r\n\r\n    // Proceed to next step\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        });\r\n    }\r\n\r\n    // Go back to previous step\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        });\r\n    }\r\n\r\n    // Handles field change\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        const { firstName, lastName, email, occupation, city, bio } = this.state;\r\n        const values =  { firstName, lastName, email, occupation, city, bio };\r\n\r\n       switch(step){\r\n           case 1:\r\n               return(\r\n                   <FormUserDetails nextStep={this.nextStep} handleChange={this.handleChange} values={values} />\r\n               )\r\n           case 2:\r\n                return (\r\n                    <FormPersonalDetails nextStep={this.nextStep} prevStep={this.prevStep} handleChange={this.handleChange} values={values} />\r\n                )\r\n           case 3:\r\n               return <Confirm prevStep={this.prevStep} nextStep={this.nextStep} values={values} /> \r\n           case 4:\r\n               return <Success  />\r\n       }\r\n    }\r\n}\r\n\r\nexport default UserForm\r\n","import React from 'react';\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}